@model SalonNamestaja.Models.Furniture

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken();


    <div class="form-horizontal">
        <h4>Furniture</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       required = "required",
                       minlength = 3,
                       maxlength = 30,
                   }
               })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.color, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       required = "required",
                       minlength = 3,
                       maxlength = 20,
                       data_val_regex = "Please inser only letters",
                       data_val_regex_pattern = @"^[a-zA-Z ]+$"
                   }
               })
                @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.country, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       required = "required",
                       minlength = 3,
                       maxlength = 30,
                       data_val_regex = "Please inser only letters",
                       data_val_regex_pattern = @"^[a-zA-Z ]+$"
                   }
               })
                @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nameOfTheManufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nameOfTheManufacturer, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       required = "required",
                       minlength = 3,
                       maxlength = 50,
                   }
               })
                @Html.ValidationMessageFor(model => model.nameOfTheManufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       required = "required",
                       @min = "1",
                       @max = "15000000",
                       data_val_regex = "Please inser only numbers",
                       data_val_regex_pattern = @"^[0-9]+$"
                   }
               })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       required = "required",
                       @min = "1",
                       @max = "150000",
                       data_val_regex = "Please inser only numbers",
                       data_val_regex_pattern = @"^[0-9]+$"
                   }
               })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryName", new SelectList(ViewBag.Names, "CategoryName", "CategoryName"), 
                new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>
            @*<div class="form-group">
                @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.year, new { 
                    htmlAttributes = new { 
                       @class = "form-control",
                       required = "required",
                       @min = "1900",
                       @max = DateTime.Now.Year,
                       data_val_regex = "Please insert only numbers",
                       data_val_regex_pattern = @"^[0-9]+$" 
                   } 
               })
                    @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.salon, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.salon, new { 
                    htmlAttributes = new {
                       @class = "form-control" ,
                       required = "required",
                       minlength = 3,
                       maxlength = 50,
                   } 
               })
                    @Html.ValidationMessageFor(model => model.salon, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2" for="ImageSource">Choose picture</label>
                <div class="col-md-8">
                    <input id="File1" type="file" name="ImageSource" onchange="ShowImage()" />
                </div>
                <div class="col-md-3 col-md-offset-3">
                    <img id="img1" height="120" required="required" src=""/>
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.ImageSource, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImageSource, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageSource, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @*@section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function ShowImage() {

            var File1 = document.getElementById("File1");
            var img1 = document.getElementById("img1");
            if (File1.value == "" || File1.value == null) {

                img1.src = 'pic_bulbon.gif';
            }
            if (File1.files.length > 0 && File1.files[0].type.match(/image.*/)) {

                var ImageSource = File1.files[0];
                var reader = new FileReader();
                reader.readAsDataURL(ImageSource);
                reader.onload = function () {
                    img1.src = reader.result;
                    
                }
            }
        }
    </script>
}
