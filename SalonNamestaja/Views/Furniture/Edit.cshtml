@model SalonNamestaja.Models.Furniture

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Furniture</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2", @disabled="disabled", @readonly = "readonly" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { 
               htmlAttributes = new { 
                   @class = "form-control",
                   required = "required",
                   minlength = 3,
                   maxlength = 30, 
               } 
           })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.color, new { 
               htmlAttributes = new { 
                   @class = "form-control",
                   required = "required",
                   minlength = 3,
                   maxlength = 20,
                   data_val_regex = "Please insert only letters",
                   data_val_regex_pattern = @"^[a-zA-Z ]+$" 
               } 
           })
                @Html.ValidationMessageFor(model => model.color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.country, new { 
               htmlAttributes = new { 
                   @class = "form-control",
                   required = "required",
                   minlength = 3,
                   maxlength = 30,
                   data_val_regex = "Please inser only letters",
                   data_val_regex_pattern = @"^[a-zA-Z ]+$"
               } 
           })
                @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nameOfTheManufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nameOfTheManufacturer, new { 
               htmlAttributes = new {
                   @class = "form-control",
                   required = "required",
                   minlength = 3,
                   maxlength = 50, 
               } 
           })
                @Html.ValidationMessageFor(model => model.nameOfTheManufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { 
               htmlAttributes = new { 
                   @class = "form-control",
                   required = "required",
                   @min = "1",
                   @max = "15000000",
                   data_val_regex = "Please inser only numbers",
                   data_val_regex_pattern = @"^[0-9]+$"
               } 
           })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new { 
               htmlAttributes = new { 
                   @class = "form-control",
                   required = "required",
                   @min = "1",
                   @max = "150000",
                   data_val_regex = "Please inser only numbers",
                   data_val_regex_pattern = @"^[0-9]+$" 
               } 
           })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryName", new SelectList(ViewBag.Names, "CategoryName", "CategoryName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.year, new { 
                htmlAttributes = new { 
                   @class = "form-control",
                   required = "required",
                   @min = "1900",
                   @max = DateTime.Now.Year,
                   data_val_regex = "Please insert only numbers",
                   data_val_regex_pattern = @"^[0-9]+$" 
               } 
           })
                @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.salon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.salon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.salon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageSource, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageSource, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageSource, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
